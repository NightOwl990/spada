apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.firebase.crashlytics'

configurations {
    all*.exclude group: 'com.android.support', module: 'support-v13'
}

//apply plugin: 'com.google.firebase.firebase-crash'
//apply plugin: 'org.greenrobot.greendao'
apply plugin: 'com.google.gms.google-services'
//apply plugin: 'org.jetbrains.kotlin.android'


def bakPath = file("${buildDir}/bakApk/")

ext {
    //for some reason, you may want to ignore tinkerBuild, such as instant run debug build?
    tinkerEnabled = true
    //for normal build
    //old apk file to build patch apk
    tinkerOldApkPath = "${bakPath}/app-debug.apk"
    //proguard mapping file to build patch apk
    tinkerApplyMappingPath = "${bakPath}/app-debug-1018-17-32-47-mapping.txt"
    //resource R.txt to build patch apk, must input if there is resource changed
    tinkerApplyResourcePath = "${bakPath}/app-debug-1018-17-32-47-R.txt"
    //only use for build all flavor, if not, just ignore this field
    tinkerBuildFlavorDirectory = "${bakPath}/app-1018-17-32-47"
}


android {
    namespace = "com.lgkk.spada"
//    buildToolsVersion '30.0.2'
    defaultConfig {
        compileSdk 34
        applicationId "com.lgkk.spada"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 53
        versionName '3.2.3'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        multiDexEnabled = true
        vectorDrawables.useSupportLibrary = true

        buildConfigField "String", "MESSAGE", "\"I am the base apk\""
//        buildConfigField "String", "MESSAGE", "\"I am the patch apk\""
        /**
         * client version would update with patch
         * so we can get the newly git version easily!
         */
        buildConfigField "String", "TINKER_ID", "\"2.3\""
        buildConfigField "String", "PLATFORM", "\"all\""

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    sourceSets {
        main {
            assets.srcDirs = ['assets']
        }
    }

    dexOptions {
        preDexLibraries true
        javaMaxHeapSize "4G"
        jumboMode = true
    }


    if (projects.hasProperty('devBuild')) {
        splits.abi.enable = false
        splits.density.enable = false
        aaptOptions.cruncherEnable = false
    }


    dataBinding {
        enabled = true
    }

    buildFeatures {
        buildConfig true
    }


    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [crashlyticsEnabled: true]
        }

        debug {
            debuggable false
            minifyEnabled false

//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [crashlyticsEnabled: false]
        }
    }

    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
    productFlavors {
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

}



dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//    implementation 'androidx.core:core-ktx:1.15.0'
//    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0'
    sharedGroup dependencies

    implementation project(':base_project')
    implementation project(':module_main')
    implementation project(':mzbanner')

//    Dont import to library ---------------------------

//    implementation 'com.google.firebase:firebase-analytics:22.2.0'
//    implementation 'com.google.firebase:firebase-crashlytics:19.4.0'

    //    Google login
    implementation rootProject.ext.dependencies["play-services-auth"]

    //Leak Canary
//    debugImplementation rootProject.ext.dependencies["leakcanary"]
//    releaseImplementation rootProject.ext.dependencies["leakcanary-no-op"]
//    debugImplementation rootProject.ext.dependencies["leakcanary-support-fragment"]

    //Mockito
    testImplementation rootProject.ext.dependencies["mockito-core"]
    androidTestImplementation rootProject.ext.dependencies["mockito-android"]

    //    implementation 'com.google.android.gms:play-services-auth-api-phone:11.4.2'

    //    Custom Crash Activity
    implementation rootProject.ext.dependencies["customactivityoncrash"]

    //    Fabric
    implementation rootProject.ext.dependencies["android-crashlytics"]

    //login social
    implementation 'com.facebook.android:facebook-android-sdk:4.33.0'
    //    Vas Sonic
    implementation("com.github.tencent:VasSonic:1.1")

//    Emoji
    implementation 'com.github.w446108264:XhsEmoticonsKeyboard:2.0.4'
    implementation 'com.github.w446108264:AndroidEmoji:1.3-withsource'


}


